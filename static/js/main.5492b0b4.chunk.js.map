{"version":3,"sources":["Login.js","App.js","Register.js","Board.js","serviceWorker.js","index.js"],"names":["Login","react_default","a","createElement","className","action","Link","to","htmlFor","type","placeholder","required","min","max","formtarget","Component","App","src_Login_0","Register","value","Board","class","name","Boolean","window","location","hostname","match","routing","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5492b0b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport './Login.css';\n\nclass Login extends Component {\n  render() {\n    return (\n        <section className=\"login\">\n          <form className=\"login__form\" action=\"\">\n            <h1 className=\"form__title\">Iniciar sesión en Trello</h1>\n            <p className=\"form__paragraph\">o\n            <Link className=\"anchor__paragraph\" to=\"/register\">crear una cuenta</Link></p>\n            <label className=\"form__label-email\" htmlFor=\"email\">Correo electrónico <span className=\"label__span-email\">(o nombre de usuario)</span></label>\n            <input className=\"form__input-email\" type=\"email\" placeholder=\"Enter your email\" required></input>\n            <label className=\"form__label-password\" htmlFor=\"email\">Contraseña</label>\n            <input className=\"form__input-password\" type=\"password\" placeholder=\"Enter your password\" min=\"8\" max=\"30\" required></input>\n            <input className=\"form__input-submit\" type=\"submit\" formtarget=\"/board\" required></input>\n          </form>\n        </section>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport Login from './Login';\nimport './Login.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Login/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport './Register.css';\n\nclass Register extends Component {\n  render() {\n    return (\n      <section className=\"register\">\n      <form className=\"register__form\" action=\"/\">\n        <h1 className=\"form__title\">Crear una cuenta de Trello</h1>\n        <p className=\"form__paragraph\">o\n        <Link className=\"anchor__paragraph\" to=\"/\">iniciar sesion con su cuenta</Link></p>\n        <label className=\"form__label-name\" htmlFor=\"name\">Nombre</label>\n        <input className=\"form__input-name\" type=\"text\" placeholder=\"Enter your password\" min=\"8\" max=\"30\" required></input>\n        <label className=\"form__label-email\" htmlFor=\"email\">Correo electrónico</label>\n        <input className=\"form__input-email\" type=\"email\" placeholder=\"Enter your email\" required></input>\n        <label className=\"form__label-password\" htmlFor=\"email\">Contraseña</label>\n        <input className=\"form__input-password\" type=\"password\" placeholder=\"Enter your password\" min=\"8\" max=\"30\" required></input>\n        <input className=\"form__input-submit\" type=\"submit\" value=\"Crear una cuenta nueva\"></input>\n      </form>\n    </section>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport './Board.css';\n\nclass Board extends Component {\n    render(){\n        return(\n        <div className=\"board\">\n            <span className=\"tab board__tab-list\">Listado</span>\n            <span className=\"tab board__tab-group\">Agroupado</span>\n                <div class=\"tab__wrapper\">\n                    <div className=\"div grid-col\">\n                        <h3 className=\"header col__header-activity\">Actividad</h3>\n                        <textarea className=\"col__textarea-description\"></textarea>\n                        <h3 className=\"header col__header-date\">Fecha limite</h3>\n                        <input className=\"col__input-date\" type=\"datetime-local\"></input>\n                        <h3 className=\"header col__header-responsable\">Responsable</h3>\n                        <input className=\"col__input-responsable\" type=\"text\" placeholder=\"Type the person in charge\"></input>\n                        <h3 className=\"header col__header-priority\">Priority</h3>\n                        <input className=\"col__input-priority\" type=\"number\" min=\"1\" max=\"10\"></input>\n                        <h3 className=\"header col__header-status\">Status</h3>\n                        <select name=\"status\">\n                            <option>Finished</option>\n                            <option>Half way</option>\n                            <option>Having trouble</option>\n                            <option>Not started</option>\n                        </select>\n                    </div>\n                </div>\n                {/* <div class=\"tab__wrapper\">\n                    <div className=\"div grid-col\">\n                        <h3 className=\"header col__header-activity\">Actividad</h3>\n                        <textarea className=\"col__textarea-description\"></textarea>\n                        <h3 className=\"header col__header-date\">Fecha limite</h3>\n                        <input className=\"col__input-date\" type=\"datetime-local\"></input>\n                        <h3 className=\"header col__header-responsable\">Responsable</h3>\n                        <input className=\"col__input-responsable\" type=\"text\" placeholder=\"Type the person in charge\"></input>\n                        <h3 className=\"header col__header-priority\">Priority</h3>\n                        <input className=\"col__input-priority\" type=\"number\" min=\"1\" max=\"10\"></input>\n                        <h3 className=\"header col__header-status\">Status</h3>\n                        <select name=\"status\">\n                            <option>Finished</option>\n                            <option>Half way</option>\n                            <option>Having trouble</option>\n                            <option>Not started</option>\n                        </select>\n                    </div>\n                </div> */}\n                \n        </div>\n        );\n    }\n}\n\nexport default Board;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Login from './Login';\n// import NotFound from './notFound';\nimport Register from './Register';\nimport Board from './Board';\n// import { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <Router>\n        <Switch>\n            <div>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/register\" component={Register} />\n                {/* <Route component={NotFound}/> */}\n                <Route path=\"/board\" component={Board} />\n            </div>\n        </Switch>\n    </Router>\n  )\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}